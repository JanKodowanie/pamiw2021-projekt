-- upgrade --
CREATE TABLE IF NOT EXISTS "user" (
    "id" CHAR(36) NOT NULL  PRIMARY KEY,
    "username" VARCHAR(20) NOT NULL UNIQUE,
    "email" VARCHAR(60) NOT NULL UNIQUE,
    "password" VARCHAR(128) NOT NULL,
    "date_joined" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "bio" TEXT,
    "gender" VARCHAR(6) NOT NULL  /* MALE: male\nFEMALE: female */,
    "role" VARCHAR(9) NOT NULL  DEFAULT 'standard' /* STANDARD: standard\nMODERATOR: moderator */
);
CREATE TABLE IF NOT EXISTS "passwordresetcode" (
    "code" CHAR(36) NOT NULL  PRIMARY KEY,
    "exp" TIMESTAMP NOT NULL  DEFAULT '2022-01-08T16:21:02.156130+00:00',
    "user_id" CHAR(36) NOT NULL UNIQUE REFERENCES "user" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "post" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "content" TEXT NOT NULL,
    "picture_url" VARCHAR(300),
    "picture_path" VARCHAR(300),
    "date_created" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "creator_id" CHAR(36) NOT NULL REFERENCES "user" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "comment" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "content" TEXT NOT NULL,
    "date_created" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "creator_id" CHAR(36) NOT NULL REFERENCES "user" ("id") ON DELETE CASCADE,
    "post_id" INT NOT NULL REFERENCES "post" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "like" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "creator_id" CHAR(36) NOT NULL REFERENCES "user" ("id") ON DELETE CASCADE,
    "post_id" INT NOT NULL REFERENCES "post" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "tag" (
    "name" VARCHAR(30) NOT NULL  PRIMARY KEY,
    "date_created" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "popularity" INT NOT NULL  DEFAULT 0
);
CREATE TABLE IF NOT EXISTS "aerich" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "version" VARCHAR(255) NOT NULL,
    "app" VARCHAR(20) NOT NULL,
    "content" JSON NOT NULL
);
CREATE TABLE IF NOT EXISTS "post_tag" (
    "post_id" INT NOT NULL REFERENCES "post" ("id") ON DELETE CASCADE,
    "tag_id" VARCHAR(30) NOT NULL REFERENCES "tag" ("name") ON DELETE CASCADE
);
